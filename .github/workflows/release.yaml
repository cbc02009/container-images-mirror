name: Build

on:
  workflow_dispatch:
  push:
    branches:
    - main
    paths:
    - '.github/workflows/release.yaml'
    - 'apps/**'
  pull_request:
    branches:
      - main
    paths:
      - 'apps/**'
      - '.github/workflows/release.yaml'

env:
  # Regstiry where the image is stored
  IMAGE_REGISTRY: ghcr.io

jobs:
  changes:
    name: Get changes
    # runs-on: [self-hosted, linux]
    runs-on: ubuntu-latest
    outputs:
      matrix: "{\"container\": ${{ steps.reduce.outputs.containers }} }"
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        list-files: json
        filters: |
          changed:
          - 'apps/**'
    - run: echo '${{ toJson(steps.filter.outputs) }}' > changes.json
    - id: reduce
      run: |
        CONTAINERS=$(jq --raw-output '.changed_files | fromjson | .[] |= sub("(?<filepath>(?<first_directory>(?<root1>[/]?)[^/]+/)(?<second_directory>(?<root2>[/]?)[^/]+)(?<extra_paths>.+))"; "\(.second_directory)") | unique' changes.json)
        echo "containers=${CONTAINERS}" >> $GITHUB_OUTPUT
    - id: print
      run: |
        echo "changed files: ${{ steps.reduce.outputs.containers }}"

  build:
    name: Build
    # runs-on: [self-hosted, linux]
    runs-on: ubuntu-latest
    needs:
    - changes
    strategy:
      matrix: ${{ fromJson(needs.changes.outputs.matrix) }}
      fail-fast: false
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Prepare
      id: prep
      run: |
        CATEGORY="apps"
        echo "category=${CATEGORY}" >> $GITHUB_OUTPUT
        VERSION=$(head -1 ./${CATEGORY}/${{ matrix.container }}/Dockerfile | sed 's/^FROM.*://' )
        VERSION="${VERSION#*v}"
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        PLATFORM=$(cat ./${CATEGORY}/${{ matrix.container }}/PLATFORM)
        echo "platform=${PLATFORM}" >> $GITHUB_OUTPUT
        echo "push=true" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: amd64,arm64

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true
        version: latest
        driver-opts: image=moby/buildkit:latest

    - name: Build and Push
      uses: docker/build-push-action@v4
      with:
        build-args: VERSION=${{ steps.prep.outputs.version }}
        context: .
        platforms: ${{ steps.prep.outputs.platform }}
        file: ./${{ steps.prep.outputs.category }}/${{ matrix.container }}/Dockerfile
        push: ${{ steps.prep.outputs.push }}
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ matrix.container }}:${{ steps.prep.outputs.version }}
          ghcr.io/${{ github.repository_owner }}/${{ matrix.container }}:v${{ steps.prep.outputs.version }}
